{"version":3,"sources":["../src/store.ts","../src/adapter.ts","../src/factory.ts","../src/plugins/persist.ts","../src/index.ts"],"sourcesContent":["import { configureStore, combineReducers, Reducer } from '@reduxjs/toolkit';\r\n\r\nconst asyncReducers: Record<string, Reducer> = {};\r\nconst staticReducers = { __init__: (state = {}) => state, };\r\n\r\nconst createRootReducer = () =>\r\n    combineReducers({\r\n        ...staticReducers,\r\n        ...asyncReducers,\r\n    });\r\n\r\nexport const store = configureStore({\r\n    reducer: createRootReducer(),\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: false\r\n        }),\r\n});\r\n\r\nexport const registerReducer = (key: string, reducer: Reducer) => {\r\n    asyncReducers[key] = reducer;\r\n    store.replaceReducer(createRootReducer());\r\n};\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;","import { useSelector } from 'react-redux';\r\nimport type { RootState } from './store';\r\nimport { store } from './store';\r\nimport React from 'react';\r\nimport type { Draft } from '@reduxjs/toolkit';\r\n\r\nexport type StateProxy<T> = {\r\n    [K in keyof T]: StateProxy<T[K]>;\r\n} & {\r\n    get(): T;\r\n    use(): T;\r\n    set(value: T | ((draft: T) => void)): void;\r\n    useWatch(callback: (value: T) => void): void;\r\n};\r\n\r\nfunction getAtPath(obj: any, path: string[]) {\r\n    return path.reduce((acc, key) => acc?.[key], obj);\r\n}\r\n\r\n\r\n\r\nexport function createTypedStateAdapter<T>(\r\n    sliceName: string,\r\n    getLiveState: () => T,\r\n    dispatch: (action: any) => void,\r\n    setAction: (payload: (draft: Draft<T>) => void) => any\r\n): StateProxy<T> {\r\n    function createProxy<P = T>(path: string[] = []): StateProxy<P> {\r\n        const target: any = {};\r\n\r\n        const proxy = new Proxy(target, {\r\n            get(_, prop) {\r\n                if (prop === 'get') {\r\n                    return () => getAtPath(getLiveState(), path);\r\n                }\r\n\r\n                if (prop === 'use') {\r\n                    return () => useSelector((state: RootState) => getAtPath(state[sliceName], path));\r\n                }\r\n\r\n                if (prop === 'set') {\r\n                    return (valueOrUpdater: any | ((draft: any) => void)) => {\r\n                        dispatch(setAction((draft: Draft<T>) => {\r\n                            if (path.length === 0) {\r\n                                if (typeof valueOrUpdater === 'function') {\r\n                                    valueOrUpdater(draft);\r\n                                } \r\n                                else {\r\n                                    Object.assign(draft, valueOrUpdater);\r\n                                }\r\n                                return;\r\n                            }\r\n\r\n                            let parent = draft as any;\r\n                            for (let i = 0; i < path.length - 1; i++) {\r\n                                const key = path[i];\r\n                                if (typeof parent[key] !== 'object' || parent[key] === null) {\r\n                                    parent[key] = {};\r\n                                }\r\n                                parent = parent[key];\r\n                            }\r\n\r\n                            const lastKey = path[path.length - 1];\r\n\r\n                            if (typeof valueOrUpdater === 'function') {\r\n                                const result = valueOrUpdater(parent[lastKey]);\r\n                                if (typeof result !== 'undefined') {\r\n                                    parent[lastKey] = result;\r\n                                }\r\n                            } \r\n                            else {\r\n                                parent[lastKey] = valueOrUpdater;\r\n                            }\r\n                        }));\r\n                    };\r\n                }\r\n\r\n                if (prop === 'useWatch') {\r\n                    return (callback: (value: any) => void) => {\r\n                        React.useEffect(() => {\r\n                            let prev = getAtPath(getLiveState(), path);\r\n                            const unsubscribe = store.subscribe(() => {\r\n                                const next = getAtPath(getLiveState(), path);\r\n                                if (next !== prev) {\r\n                                    callback(next);\r\n                                    prev = next;\r\n                                }\r\n                            });\r\n                            return unsubscribe;\r\n                        }, []);\r\n                    };\r\n                }\r\n\r\n                return createProxy([...path, prop.toString()]);\r\n            }\r\n        });\r\n\r\n        return proxy as unknown as StateProxy<P>;\r\n    }\r\n\r\n    return createProxy();\r\n}\r\n","import { Draft, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ntype SetFnPayload<T> = (draft: Draft<T>) => void;\r\n\r\n\r\nexport default function createStateSlice<T extends object>(name: string, initialState: T) {\r\n    const slice = createSlice({\r\n        name,\r\n        initialState,\r\n        reducers: {\r\n            apply: (state, action: PayloadAction<SetFnPayload<T>>) => {\r\n                action.payload(state);\r\n            }\r\n        },\r\n    });\r\n\r\n    return {\r\n        name,\r\n        slice,\r\n        reducer: slice.reducer,\r\n        actions: slice.actions,\r\n    };\r\n}\r\n","import { store } from '../store';\r\nimport type { StatePlugin } from './type';\r\n\r\n\r\nexport function persistPluginOld<T>(options?: { key?: string; restore?: boolean }): StatePlugin<T> {\r\n    return ({ sliceName, getState, dispatch }) => {\r\n        const localKey = options?.key ?? `statekit:${sliceName}`;\r\n\r\n        // ✅ Восстановление состояния\r\n        if (options?.restore) {\r\n            try {\r\n                const raw = localStorage.getItem(localKey);\r\n                if (raw) {\r\n                    const parsed = JSON.parse(raw);\r\n\r\n                    // диспатчим весь стейт, как draft-apply через immer\r\n                    dispatch({\r\n                        type: `${sliceName}/apply`,\r\n                        payload: (draft: any) => {\r\n                            Object.assign(draft, parsed);\r\n                        }\r\n                    });\r\n                }\r\n            } \r\n            catch (e) {\r\n                console.warn(`[statekit] Failed to restore ${sliceName}`, e);\r\n            }\r\n        }\r\n\r\n        // ✅ Подписка на изменения — сохраняем состояние\r\n        let prev = getState();\r\n        store.subscribe(() => {\r\n            const current = getState();\r\n            if (current !== prev) {\r\n                prev = current;\r\n\r\n                // сериализация и запись\r\n                try {\r\n                    const data = JSON.stringify(current);\r\n                    \r\n                    setTimeout(() => {\r\n                        localStorage.setItem(localKey, data);\r\n                    }, 0);\r\n                } \r\n                catch (e) {\r\n                    console.warn(`[statekit] Failed to save ${sliceName}`, e);\r\n                }\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction deepReplaceNulls<T>(defaults: T, overrides: any): T {\r\n    if (typeof defaults !== 'object' || defaults === null) return overrides ?? defaults;\r\n    if (Array.isArray(defaults))  return (Array.isArray(overrides) ? overrides : defaults) as unknown as T;\r\n\r\n    const result: any = {};\r\n\r\n    for (const key in defaults) {\r\n        const def = defaults[key];\r\n        const over = overrides?.[key];\r\n\r\n        if (over === null || typeof over === 'undefined') {\r\n            result[key] = def;\r\n        } \r\n        else if (typeof def === 'object' && def !== null && typeof over === 'object') {\r\n            result[key] = deepReplaceNulls(def, over);\r\n        } \r\n        else {\r\n            result[key] = over;\r\n        }\r\n    }\r\n\r\n    return result as T;\r\n}\r\n\r\n\r\nexport function persistPlugin<T>(options?: { key?: string; restore?: boolean }): StatePlugin<T> {\r\n    return ({ sliceName, getState, dispatch, initialState }) => {\r\n        const localKey = options?.key ?? `statekit:${sliceName}`;\r\n\r\n        if (options?.restore) {\r\n            try {\r\n                const raw = localStorage.getItem(localKey);\r\n                if (raw) {\r\n                    const parsed = JSON.parse(raw);\r\n\r\n                    const fixed = deepReplaceNulls(initialState, parsed);\r\n\r\n                    dispatch({\r\n                        type: `${sliceName}/apply`,\r\n                        payload: (draft: any) => {\r\n                            Object.assign(draft, fixed);\r\n                        }\r\n                    });\r\n                }\r\n            } \r\n            catch (e) {\r\n                console.warn(`[statekit] Failed to restore ${sliceName}`, e);\r\n            }\r\n        }\r\n\r\n        // подписка на изменения\r\n        let prev = getState();\r\n        store.subscribe(() => {\r\n            const current = getState();\r\n            if (current !== prev) {\r\n                prev = current;\r\n                try {\r\n                    const data = JSON.stringify(current);\r\n                    setTimeout(() => {\r\n                        localStorage.setItem(localKey, data);\r\n                    }, 0);\r\n                } \r\n                catch (e) {\r\n                    console.warn(`[statekit] Failed to save ${sliceName}`, e);\r\n                }\r\n            }\r\n        });\r\n    };\r\n}","import { registerReducer, store } from './store';\r\nimport { createTypedStateAdapter } from './adapter';\r\nimport createSliceFactory from './factory';\r\nexport { store } from './store';\r\nexport { persistPlugin as useLocalStorage } from './plugins/persist';\r\nimport type { StatePlugin } from './plugins/type';\r\n\r\n\r\n\r\nexport function createState<T extends object>(\r\n    name: string,\r\n    initialState: T,\r\n    plugins: StatePlugin<T>[] = []\r\n) {\r\n    const slice = createSliceFactory(name, initialState);\r\n    registerReducer(name, slice.reducer);\r\n\r\n    const adapter = createTypedStateAdapter<T>(\r\n        name,\r\n        () => store.getState()[name] as T,\r\n        store.dispatch,\r\n        slice.actions.apply\r\n    );\r\n\r\n    for (const plugin of plugins) {\r\n        plugin({\r\n            sliceName: name,\r\n            getState: () => store.getState()[name] as T,\r\n            dispatch: store.dispatch,\r\n            initialState\r\n        });\r\n    }\r\n\r\n    return adapter;\r\n}\r\n\r\n\r\n\r\nexport default createState;"],"mappings":"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","names":[]}